name: rust-release
description: Create a release when the version in Cargo.toml differs from the latest tag
inputs:
  crates_io_token:
    description: "crates.io API token"
    required: false
    default: ""
  cliff_template:
    description: "URL to git-cliff template configuration"
    required: false
    default: "https://raw.githubusercontent.com/jokelbaf/rust-release/master/cliff-template.toml"
  manifest_path:
    description: "Path to Cargo.toml file"
    required: false
    default: "Cargo.toml"

runs:
  using: composite
  steps:
    - name: Compare versions
      id: compare-versions
      run: |
        CARGO_TOML="${{ inputs.manifest_path }}"

        if [ $(git tag -l | wc -l) -eq 0 ]; then
          echo "No tags found - proceeding with first release"
          LOCAL_VERSION=$(grep -m1 '^version' $CARGO_TOML | cut -d '"' -f2)
          echo "local_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        REMOTE_VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
        LOCAL_VERSION=$(grep -m1 '^version' $CARGO_TOML | cut -d '"' -f2)
        echo "Remote: $REMOTE_VERSION, Local: $LOCAL_VERSION"
        
        if [ "$REMOTE_VERSION" = "$LOCAL_VERSION" ]; then
          echo "Versions match - skipping release"
          exit 0
        fi
        
        echo "local_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT
      shell: bash
    
    - name: Create local tag
      if: steps.compare-versions.outputs.local_version != ''
      run: git tag v${{ steps.compare-versions.outputs.local_version }}
      shell: bash

    - name: Generate changelog
      if: steps.compare-versions.outputs.local_version != ''
      uses: tj-actions/git-cliff@v1
      with:
        template-config: ${{ inputs.cliff_template }}
        args: --latest --strip header
      id: git-cliff

    - name: Get changelog content
      if: steps.compare-versions.outputs.local_version != ''
      run: |
        echo "content<<EOF" >> $GITHUB_OUTPUT
        cat "HISTORY.md" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
      shell: bash
      id: get-content

    - name: Create release
      if: steps.compare-versions.outputs.local_version != ''
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ steps.get-content.outputs.content }}
        tag_name: v${{ steps.compare-versions.outputs.local_version }}

    - name: Publish to crates.io
      if: steps.compare-versions.outputs.local_version != '' && inputs.crates_io_token != ''
      run: |
        cargo login ${{ inputs.crates_io_token }}
        cargo publish --manifest-path "${{ inputs.manifest_path }}"
      shell: bash